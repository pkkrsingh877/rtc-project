<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat App</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
    <script src="https://cdn.jsdelivr.net/npm/socket.io-client@4.6.0/dist/socket.io.min.js"></script>
</head>

<body>
    <div class="feedback"></div>
    <section class="chatbox box">
        <article class="display">
        </article>
        <article id="form">
            <input type="text" placeholder="username" class="input username" required>
            <input type="text" placeholder="message" class="input message" required>
            <button type="submit" id="button" class="button is-primary">Send</button>
        </article>
    </section>
    <style>
        * {
            box-sizing: border-box;
        }

        .chatbox {
            padding: 2rem;
            width: 100vw;

            display: grid;
            grid-template-rows: 9fr 1fr;
        }

        #form {
            display: grid;
            grid-template-columns: 1fr;
            grid-template-rows: 1fr 1fr 1fr;
        }

        .feedback{
            background-color: orchid;
            color: white;
            min-height: 2rem;
            position: sticky;
            top: 0;
        }

    </style>
    <script>
        const button = document.getElementById('button');
        const display = document.querySelector(".display");
        const feedback = document.querySelector('.feedback');
        const socket = new io("http://localhost:8000");

        // Listen for the 'chat' event
        socket.on('chat', (data) => {
            // Handle the received message here
            feedback.innerHTML = '';
            const message = document.createElement('div');
            message.innerHTML = `<strong>${data.username}</strong>: ${data.message} <hr/>`;
            display.appendChild(message);
        });

        // Listen for the 'typing' event
        socket.on('typing', (data) => {
            // Handle the received message here
            console.log(data);
            feedback.innerHTML = `<b>${data['username']}</b> is typing... </hr>`;
        });

        button.addEventListener('click', async (e) => {
            e.preventDefault();

            const message = document.querySelector(".message").value;
            const username = document.querySelector('.username').value;

            // Emit the request to the server
            socket.emit('chat', { username, message });
        });

        //letting the server know that someone pressed a key
        const message = document.querySelector(".message");
        message.addEventListener('keydown', (e) => {
            const username = document.querySelector('.username').value;
            socket.emit('typing', {username});
        });
    </script>
</body>

</html>